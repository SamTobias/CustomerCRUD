jacoco {
    toolVersion = '0.8.5'
}

android {
    testOptions {
        unitTests.all {
            jacoco {
                includeNoLocationClasses = true
            }
        }
    }

    buildTypes {
        debug {
            testCoverageEnabled true
        }
    }
}

task jacocoTestReport(type: JacocoReport, dependsOn: ['testDebugUnitTest', 'createDebugCoverageReport']) {
    reports {
        xml.enabled = true
        html.enabled = true
    }

    def fileFilter = [
            'android/**/*.*',
            '**/R.class',
            '**/R$*.class',
            '**/BuildConfig.*',
            '**/Manifest*.*',
            '**/*Test*.*',
            '**/com/example/databinding/*',
            '**/com/example/generated/callback/*',
            '**/android/databinding/*',
            '**/androidx/databinding/*',
            '**/di/module/*',
            '**/*MapperImpl*.*',
            '**/*$ViewInjector*.*',
            '**/*$ViewBinder*.*',
            '**/*Component*.*',
            '**/*BR*.*',
            '**/*$Lambda$*.*',
            '**/*Companion*.*',
            '**/*Module.*',
            '**/*Dagger*.*',
            '**/*MembersInjector*.*',
            '**/*_Factory*.*',
            '**/*_Provide*Factory*.*',
            '**/*Extensions*.*',
            '**/*$Result.*', /* filtering `sealed` and `data` classes */
            '**/*$Result$*.*'/* filtering `sealed` and `data` classes */
    ]

    def javaClasses = fileTree(
            dir: "$buildDir/intermediates/javac/debug/classes",
            excludes: fileFilter
    )

    def kotlinClasses = fileTree(
            dir: "$buildDir/tmp/kotlin-classes/debug",
            excludes: fileFilter
    )

    def mainSrc = "${project.projectDir}/src/main/java"

    sourceDirectories.setFrom(files([mainSrc]))
    classDirectories.setFrom(files([javaClasses], [kotlinClasses]))
    executionData(fileTree(dir: "$buildDir", includes: [
            "jacoco/testDebugUnitTest.exec",
            "outputs/code_coverage/debugAndroidTest/connected/*/*.ec"
    ]))

}